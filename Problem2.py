'''
Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:
    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find
the sumer of the even-valued terms.
'''

def even_fibonacci_numbers():
    fibonacci_numbers = [1, 2]
    total = 3
    while True:
        next_fib = fibonacci_numbers[-1] + fibonacci_numbers[-2]
        if next_fib < 4000000:
            fibonacci_numbers.append(next_fib)
            if next_fib % 2 == 0:
                total += next_fib
        else:
            return total


if __name__ == "__main__":
    print(even_fibonacci_numbers())